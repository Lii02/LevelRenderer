// "sign_hospital.h" generated by "Obj2Header.exe" [Version 1.9d] Author: L.Norri Fullsail University.
// Data is converted to left-handed coordinate system and UV data is V flipped for Direct3D/Vulkan.
// The companion file "sign_hospital.h2b" is a binary dump of this format(-padding) for more flexibility.
// Loading *.h2b: read version, sizes, handle strings(max len 260) by reading until null-terminated.
/***********************/
/*  Generator version  */
/***********************/
#ifndef _sign_hospital_version_
const char sign_hospital_version[4] = { '0','1','9','d' };
#define _sign_hospital_version_
#endif
/************************************************/
/*  This section contains the model's size data */
/************************************************/
#ifndef _sign_hospital_vertexcount_
const unsigned sign_hospital_vertexcount = 142;
#define _sign_hospital_vertexcount_
#endif
#ifndef _sign_hospital_indexcount_
const unsigned sign_hospital_indexcount = 276;
#define _sign_hospital_indexcount_
#endif
#ifndef _sign_hospital_materialcount_
const unsigned sign_hospital_materialcount = 3; // can be used for batched draws
#define _sign_hospital_materialcount_
#endif
#ifndef _sign_hospital_meshcount_
const unsigned sign_hospital_meshcount = 3;
#define _sign_hospital_meshcount_
#endif
/************************************************/
/*  This section contains the raw data to load  */
/************************************************/
#ifndef __OBJ_VEC3__
typedef struct _OBJ_VEC3_
{
	float x,y,z; // 3D Coordinate.
}OBJ_VEC3;
#define __OBJ_VEC3__
#endif
#ifndef __OBJ_VERT__
typedef struct _OBJ_VERT_
{
	OBJ_VEC3 pos; // Left-handed +Z forward coordinate w not provided, assumed to be 1.
	OBJ_VEC3 uvw; // D3D/Vulkan style top left 0,0 coordinate.
	OBJ_VEC3 nrm; // Provided direct from obj file, may or may not be normalized.
}OBJ_VERT;
#define __OBJ_VERT__
#endif
#ifndef _sign_hospital_vertices_
// Raw Vertex Data follows: Positions, Texture Coordinates and Normals.
const OBJ_VERT sign_hospital_vertices[142] =
{
	{	{ 0.025000f, 0.384039f, 0.195723f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.368078f, 0.200000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.031922f, 0.200000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.015961f, 0.195723f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.395723f, 0.184039f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.004277f, 0.184039f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.400000f, 0.168078f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.000000f, 0.168078f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.400000f, -0.168078f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.000000f, -0.168078f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.395723f, -0.184039f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.004277f, -0.184039f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.384039f, -0.195723f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.015961f, -0.195723f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.368078f, -0.200000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.031922f, -0.200000f },	{ 0.000000f, 1.000000f, 0.000000f },	{ 1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.111455f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, -0.040124f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, 0.168078f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.168078f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, 0.111455f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, 0.111455f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, 0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, 0.168078f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, 0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, -0.168078f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.168078f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, 0.111455f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, -0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, -0.168078f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, -0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, -0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, -0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, -0.111455f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, -0.168078f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, 0.040124f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, 0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.168078f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, 0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, 0.111455f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, -0.168078f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, -0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.111455f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.111455f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, -0.111455f },	{ -4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, 0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.368078f, -0.200000f },	{ 0.984252f, -13.491270f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ 0.025000f, 0.031922f, -0.200000f },	{ 0.984252f, -0.256763f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.025000f, 0.031922f, -0.200000f },	{ -0.984252f, -0.256763f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.025000f, 0.368078f, -0.200000f },	{ -0.984252f, -13.491270f, 0.000000f },	{ 0.000000f, 0.000000f, -1.000000f }	},
	{	{ -0.025000f, 0.000000f, -0.168078f },	{ -0.984252f, -5.617252f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.000000f, -0.168078f },	{ 0.984252f, -5.617252f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.000000f, 0.168078f },	{ 0.984252f, 7.617252f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.000000f, 0.168078f },	{ -0.984252f, 7.617252f, 0.000000f },	{ 0.000000f, -1.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.200000f },	{ 0.984252f, -13.491270f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.025000f, 0.031922f, 0.200000f },	{ 0.984252f, -0.256763f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.025000f, 0.031922f, 0.200000f },	{ -0.984252f, -0.256763f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ 0.025000f, 0.368078f, 0.200000f },	{ -0.984252f, -13.491270f, 0.000000f },	{ 0.000000f, 0.000000f, 1.000000f }	},
	{	{ -0.025000f, 0.400000f, 0.168078f },	{ 0.984252f, 7.617252f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.400000f, 0.168078f },	{ -0.984252f, 7.617252f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ 0.025000f, 0.400000f, -0.168078f },	{ -0.984252f, -5.617252f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.400000f, -0.168078f },	{ 0.984252f, -5.617252f, 0.000000f },	{ 0.000000f, 1.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.000000f, -0.168078f },	{ 6.617252f, 1.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.000000f, 0.168078f },	{ -6.617252f, 1.000000f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, 0.168078f },	{ -6.617252f, -0.256763f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, -0.168078f },	{ 6.617252f, -0.256763f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.004277f, -0.184039f },	{ 7.245634f, 0.831626f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, -0.168078f },	{ 6.617252f, -13.491270f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.400000f, -0.168078f },	{ 6.617252f, -14.748030f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.395723f, -0.184039f },	{ 7.245634f, -14.579660f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.015961f, -0.195723f },	{ 7.705641f, 0.371618f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.384039f, -0.195723f },	{ 7.705641f, -14.119650f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, -0.200000f },	{ 7.874016f, -0.256763f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, -0.200000f },	{ 7.874016f, -13.491270f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.400000f, 0.168078f },	{ -6.617252f, -14.748030f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.395723f, 0.184039f },	{ -7.245634f, -14.579660f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.004277f, 0.184039f },	{ -7.245634f, 0.831626f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.384039f, 0.195723f },	{ -7.705641f, -14.119650f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.015961f, 0.195723f },	{ -7.705641f, 0.371618f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.200000f },	{ -7.874016f, -13.491270f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.031922f, 0.200000f },	{ -7.874016f, -0.256763f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.368078f, 0.168078f },	{ -6.617252f, -13.491270f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.384039f, 0.195723f },	{ 0.984252f, -11.610090f, 0.000000f },	{ 0.000000f, 0.500000f, 0.866025f }	},
	{	{ -0.025000f, 0.368078f, 0.200000f },	{ 0.984252f, -10.959550f, 0.000000f },	{ 0.000000f, 0.258819f, 0.965926f }	},
	{	{ 0.025000f, 0.368078f, 0.200000f },	{ -0.984252f, -10.959550f, 0.000000f },	{ 0.000000f, 0.258819f, 0.965926f }	},
	{	{ 0.025000f, 0.384039f, 0.195723f },	{ -0.984252f, -11.610090f, 0.000000f },	{ 0.000000f, 0.500000f, 0.866025f }	},
	{	{ -0.025000f, 0.395723f, 0.184039f },	{ 0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, 0.866025f, 0.500000f }	},
	{	{ -0.025000f, 0.384039f, 0.195723f },	{ 0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, 0.500000f, 0.866025f }	},
	{	{ 0.025000f, 0.384039f, 0.195723f },	{ -0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, 0.500000f, 0.866025f }	},
	{	{ 0.025000f, 0.395723f, 0.184039f },	{ -0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, 0.866025f, 0.500000f }	},
	{	{ -0.025000f, 0.395723f, 0.184039f },	{ 0.984252f, 3.966433f, 0.000000f },	{ 0.000000f, 0.866025f, 0.500000f }	},
	{	{ 0.025000f, 0.395723f, 0.184039f },	{ -0.984252f, 3.966433f, 0.000000f },	{ 0.000000f, 0.866025f, 0.500000f }	},
	{	{ 0.025000f, 0.400000f, 0.168078f },	{ -0.984252f, 3.315885f, 0.000000f },	{ 0.000000f, 0.965926f, 0.258819f }	},
	{	{ -0.025000f, 0.400000f, 0.168078f },	{ 0.984252f, 3.315885f, 0.000000f },	{ 0.000000f, 0.965926f, 0.258819f }	},
	{	{ -0.025000f, 0.400000f, -0.168078f },	{ -0.984252f, 3.315885f, 0.000000f },	{ 0.000000f, 0.965926f, -0.258819f }	},
	{	{ 0.025000f, 0.400000f, -0.168078f },	{ 0.984252f, 3.315885f, 0.000000f },	{ 0.000000f, 0.965926f, -0.258819f }	},
	{	{ 0.025000f, 0.395723f, -0.184039f },	{ 0.984252f, 3.966433f, 0.000000f },	{ 0.000000f, 0.866025f, -0.500000f }	},
	{	{ -0.025000f, 0.395723f, -0.184039f },	{ -0.984252f, 3.966433f, 0.000000f },	{ 0.000000f, 0.866025f, -0.500000f }	},
	{	{ 0.025000f, 0.395723f, -0.184039f },	{ 0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, 0.866025f, -0.500000f }	},
	{	{ 0.025000f, 0.384039f, -0.195723f },	{ 0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, 0.500000f, -0.866025f }	},
	{	{ -0.025000f, 0.384039f, -0.195723f },	{ -0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, 0.500000f, -0.866025f }	},
	{	{ -0.025000f, 0.395723f, -0.184039f },	{ -0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, 0.866025f, -0.500000f }	},
	{	{ 0.025000f, 0.384039f, -0.195723f },	{ 0.984252f, -11.610090f, 0.000000f },	{ 0.000000f, 0.500000f, -0.866025f }	},
	{	{ 0.025000f, 0.368078f, -0.200000f },	{ 0.984252f, -10.959550f, 0.000000f },	{ 0.000000f, 0.258819f, -0.965926f }	},
	{	{ -0.025000f, 0.368078f, -0.200000f },	{ -0.984252f, -10.959550f, 0.000000f },	{ 0.000000f, 0.258819f, -0.965926f }	},
	{	{ -0.025000f, 0.384039f, -0.195723f },	{ -0.984252f, -11.610090f, 0.000000f },	{ 0.000000f, 0.500000f, -0.866025f }	},
	{	{ 0.025000f, 0.031922f, -0.200000f },	{ 0.984252f, -2.251885f, 0.000000f },	{ 0.000000f, -0.258819f, -0.965926f }	},
	{	{ 0.025000f, 0.015961f, -0.195723f },	{ 0.984252f, -1.601337f, 0.000000f },	{ 0.000000f, -0.500000f, -0.866025f }	},
	{	{ -0.025000f, 0.015961f, -0.195723f },	{ -0.984252f, -1.601337f, 0.000000f },	{ 0.000000f, -0.500000f, -0.866025f }	},
	{	{ -0.025000f, 0.031922f, -0.200000f },	{ -0.984252f, -2.251885f, 0.000000f },	{ 0.000000f, -0.258819f, -0.965926f }	},
	{	{ -0.025000f, 0.015961f, -0.195723f },	{ -0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, -0.500000f, -0.866025f }	},
	{	{ 0.025000f, 0.015961f, -0.195723f },	{ 0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, -0.500000f, -0.866025f }	},
	{	{ 0.025000f, 0.004277f, -0.184039f },	{ 0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, -0.866025f, -0.500000f }	},
	{	{ -0.025000f, 0.004277f, -0.184039f },	{ -0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, -0.866025f, -0.500000f }	},
	{	{ -0.025000f, 0.004277f, -0.184039f },	{ -0.984252f, -6.042324f, 0.000000f },	{ 0.000000f, -0.866025f, -0.500000f }	},
	{	{ 0.025000f, 0.004277f, -0.184039f },	{ 0.984252f, -6.042324f, 0.000000f },	{ 0.000000f, -0.866025f, -0.500000f }	},
	{	{ 0.025000f, 0.000000f, -0.168078f },	{ 0.984252f, -5.391775f, 0.000000f },	{ 0.000000f, -0.965926f, -0.258819f }	},
	{	{ -0.025000f, 0.000000f, -0.168078f },	{ -0.984252f, -5.391775f, 0.000000f },	{ 0.000000f, -0.965926f, -0.258819f }	},
	{	{ -0.025000f, 0.000000f, 0.168078f },	{ 0.984252f, -5.391775f, 0.000000f },	{ 0.000000f, -0.965926f, 0.258819f }	},
	{	{ 0.025000f, 0.000000f, 0.168078f },	{ -0.984252f, -5.391775f, 0.000000f },	{ 0.000000f, -0.965926f, 0.258819f }	},
	{	{ 0.025000f, 0.004277f, 0.184039f },	{ -0.984252f, -6.042324f, 0.000000f },	{ 0.000000f, -0.866025f, 0.500000f }	},
	{	{ -0.025000f, 0.004277f, 0.184039f },	{ 0.984252f, -6.042324f, 0.000000f },	{ 0.000000f, -0.866025f, 0.500000f }	},
	{	{ -0.025000f, 0.004277f, 0.184039f },	{ 0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, -0.866025f, 0.500000f }	},
	{	{ 0.025000f, 0.004277f, 0.184039f },	{ -0.984252f, -4.242496f, 0.000000f },	{ 0.000000f, -0.866025f, 0.500000f }	},
	{	{ 0.025000f, 0.015961f, 0.195723f },	{ -0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, -0.500000f, 0.866025f }	},
	{	{ -0.025000f, 0.015961f, 0.195723f },	{ 0.984252f, -4.893044f, 0.000000f },	{ 0.000000f, -0.500000f, 0.866025f }	},
	{	{ -0.025000f, 0.031922f, 0.200000f },	{ 0.984252f, -2.251885f, 0.000000f },	{ 0.000000f, -0.258819f, 0.965926f }	},
	{	{ -0.025000f, 0.015961f, 0.195723f },	{ 0.984252f, -1.601337f, 0.000000f },	{ 0.000000f, -0.500000f, 0.866025f }	},
	{	{ 0.025000f, 0.015961f, 0.195723f },	{ -0.984252f, -1.601337f, 0.000000f },	{ 0.000000f, -0.500000f, 0.866025f }	},
	{	{ 0.025000f, 0.031922f, 0.200000f },	{ -0.984252f, -2.251885f, 0.000000f },	{ 0.000000f, -0.258819f, 0.965926f }	},
	{	{ -0.025000f, 0.159876f, -0.111455f },	{ 4.387990f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, -0.040124f },	{ 1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.040124f },	{ 1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, -0.111455f },	{ 4.387990f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, -0.040124f },	{ 1.579676f, -11.262010f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, -0.040124f },	{ 1.579676f, -2.486026f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.311455f, 0.040124f },	{ -1.579676f, -11.262010f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, 0.040124f },	{ -1.579676f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.159876f, 0.040124f },	{ -1.579676f, -5.294340f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.088545f, 0.040124f },	{ -1.579676f, -2.486026f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
	{	{ -0.025000f, 0.240124f, 0.111455f },	{ -4.387990f, -8.453692f, 0.000000f },	{ -1.000000f, 0.000000f, -0.000000f }	},
};
#define _sign_hospital_vertices_
#endif
#ifndef _sign_hospital_indices_
// Index Data follows: Sequential by mesh, Every Three Indices == One Triangle.
const unsigned int sign_hospital_indices[276] =
{
	 0, 1, 2,
	 2, 3, 0,
	 3, 4, 0,
	 3, 5, 4,
	 5, 6, 4,
	 5, 7, 6,
	 7, 8, 6,
	 7, 9, 8,
	 9, 10, 8,
	 9, 11, 10,
	 11, 12, 10,
	 11, 13, 12,
	 13, 14, 12,
	 13, 15, 14,
	 16, 17, 18,
	 19, 20, 21,
	 22, 23, 24,
	 25, 26, 24,
	 27, 28, 21,
	 25, 29, 30,
	 31, 32, 30,
	 33, 34, 30,
	 27, 35, 36,
	 37, 28, 38,
	 37, 39, 40,
	 41, 42, 36,
	 41, 43, 18,
	 41, 34, 44,
	 41, 26, 45,
	 46, 23, 21,
	 47, 48, 49,
	 49, 50, 47,
	 51, 52, 53,
	 53, 54, 51,
	 55, 56, 57,
	 57, 58, 55,
	 59, 60, 61,
	 61, 62, 59,
	 63, 64, 65,
	 65, 66, 63,
	 66, 67, 63,
	 66, 68, 67,
	 68, 69, 67,
	 69, 70, 67,
	 70, 71, 67,
	 70, 72, 71,
	 72, 73, 71,
	 72, 74, 73,
	 75, 65, 64,
	 75, 69, 68,
	 76, 75, 64,
	 76, 64, 77,
	 78, 76, 77,
	 78, 77, 79,
	 80, 78, 79,
	 79, 81, 80,
	 75, 68, 82,
	 75, 82, 65,
	 83, 84, 85,
	 85, 86, 83,
	 87, 88, 89,
	 89, 90, 87,
	 91, 92, 93,
	 93, 94, 91,
	 95, 96, 97,
	 97, 98, 95,
	 99, 100, 101,
	 101, 102, 99,
	 103, 104, 105,
	 105, 106, 103,
	 107, 108, 109,
	 109, 110, 107,
	 111, 112, 113,
	 113, 114, 111,
	 115, 116, 117,
	 117, 118, 115,
	 119, 120, 121,
	 121, 122, 119,
	 123, 124, 125,
	 125, 126, 123,
	 127, 128, 129,
	 129, 130, 127,
	 131, 132, 133,
	 133, 134, 131,
	 135, 133, 132,
	 135, 132, 136,
	 137, 135, 136,
	 138, 137, 136,
	 139, 138, 136,
	 136, 140, 139,
	 138, 139, 21,
	 21, 141, 138,
};
#define _sign_hospital_indices_
#endif
// Part of an OBJ_MATERIAL, the struct is 16 byte aligned so it is GPU register friendly.
#ifndef __OBJ_ATTRIBUTES__
typedef struct _OBJ_ATTRIBUTES_
{
	OBJ_VEC3    Kd; // diffuse reflectivity
	float	    d; // dissolve (transparency) 
	OBJ_VEC3    Ks; // specular reflectivity
	float       Ns; // specular exponent
	OBJ_VEC3    Ka; // ambient reflectivity
	float       sharpness; // local reflection map sharpness
	OBJ_VEC3    Tf; // transmission filter
	float       Ni; // optical density (index of refraction)
	OBJ_VEC3    Ke; // emissive reflectivity
	unsigned    illum; // illumination model
}OBJ_ATTRIBUTES;
#define __OBJ_ATTRIBUTES__
#endif
// This structure also has been made GPU register friendly so it can be transfered directly if desired.
// Note: Total struct size will vary depenedening on CPU processor architecture (string pointers).
#ifndef __OBJ_MATERIAL__
typedef struct _OBJ_MATERIAL_
{
	// The following items are typically used in a pixel/fragment shader, they are packed for GPU registers.
	OBJ_ATTRIBUTES attrib; // Surface shading characteristics & illumination model
	// All items below this line are not needed on the GPU and are generally only used during load time.
	const char* name; // the name of this material
	// If the model's materials contain any specific texture data it will be located below.
	const char* map_Kd; // diffuse texture
	const char* map_Ks; // specular texture
	const char* map_Ka; // ambient texture
	const char* map_Ke; // emissive texture
	const char* map_Ns; // specular exponent texture
	const char* map_d; // transparency texture
	const char* disp; // roughness map (displacement)
	const char* decal; // decal texture (lerps texture & material colors)
	const char* bump; // normal/bumpmap texture
	void* padding[2]; // 16 byte alignment on 32bit or 64bit
}OBJ_MATERIAL;
#define __OBJ_MATERIAL__
#endif
#ifndef _sign_hospital_materials_
// Material Data follows: pulled from a .mtl file of the same name if present.
const OBJ_MATERIAL sign_hospital_materials[3] =
{
	{
		{{ 0.764151f, 0.764151f, 0.764151f },
		1.000000f,
		{ 0.200000f, 0.200000f, 0.200000f },
		500.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.500000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"_defaultMat",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.560784f, 0.568627f, 0.600000f },
		1.000000f,
		{ 0.200000f, 0.200000f, 0.200000f },
		500.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.500000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"border",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
	{
		{{ 0.337255f, 0.737255f, 0.600000f },
		1.000000f,
		{ 0.200000f, 0.200000f, 0.200000f },
		500.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		60.000000f,
		{ 1.000000f, 1.000000f, 1.000000f },
		1.500000f,
		{ 0.000000f, 0.000000f, 0.000000f },
		2},
		"roof",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
		"",
	},
};
#define _sign_hospital_materials_
#endif
/************************************************/
/*  This section contains the model's structure */
/************************************************/
#ifndef _sign_hospital_batches_
// Use this conveinence array to batch render all geometry by like material.
// Each entry corresponds to the same entry in the materials array above.
// The two numbers provided are the IndexCount and the IndexOffset into the indices array.
// If you need more fine grained control(ex: for transformations) use the OBJ_MESH data below.
const unsigned int sign_hospital_batches[3][2] =
{
	{ 90, 0 },
	{ 156, 90 },
	{ 30, 246 },
};
#define _sign_hospital_batches_
#endif
#ifndef __OBJ_MESH__
typedef struct _OBJ_MESH_
{
	const char* name;
	unsigned    indexCount;
	unsigned    indexOffset;
	unsigned    materialIndex;
}OBJ_MESH;
#define __OBJ_MESH__
#endif
#ifndef _sign_hospital_meshes_
// Mesh Data follows: Meshes are .obj groups sorted & split by material.
// Meshes are provided in sequential order, sorted by material first and name second.
const OBJ_MESH sign_hospital_meshes[3] =
{
	{
		"sign_hospital",
		90,
		0,
		0,
	},
	{
		"sign_hospital",
		156,
		90,
		1,
	},
	{
		"sign_hospital",
		30,
		246,
		2,
	},
};
#define _sign_hospital_meshes_
#endif
